user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log  /var/log/nginx/access.log;

    map $http_origin $cors_origin {
        default $http_origin;
    }

    server {
        listen 80;
        server_name _;
        client_max_body_size 0;
        client_body_buffer_size 128k;
        client_body_in_file_only on;
	client_body_temp_path /var/cache/nginx/client_temp 1 2;
        root /usr/share/nginx/html;
        index index.html;

        location /api/analyzer/ {
            proxy_pass http://reportable-app:8080/api/analyzer/;
            include snippets/proxy_params.conf;
            include snippets/cors_options.conf;
        }
        

        location /production-minio/ {
	    # Передаем Host как minio:9000, чтобы подпись была валидной
	    proxy_set_header Host $http_host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    
	    # Убираем /minio из пути для внутреннего запроса
	    rewrite ^/production-minio/(.*)$ /$1 break;
	    proxy_pass http://production-minio:9000;
	    
	    proxy_http_version 1.1;
	    proxy_set_header Connection "";
	    proxy_buffering off;
	    
	    # Передаем все заголовки авторизации
	    proxy_pass_request_headers on;
	}

        location / {
	    add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires 0;
            try_files $uri /index.html;
        }

        location /assets/ {
            alias /usr/share/nginx/html/assets/;
            try_files $uri =404;
        }

        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
        }
    }
}
